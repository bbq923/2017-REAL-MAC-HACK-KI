buildscript {
    ext {
        springBootVersion = '1.5.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

//group = 'amigo.com'
//version = '0.0.1-SNAPSHOT'
//sourceCompatibility = 1.8

jar {
    baseName = 'amigo'
    version = '1.0.0'
}

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.apache.tomcat.embed:tomcat-embed-jasper')
    compile('javax.servlet:jstl:1.2')
    compile('pl.allegro.tech.boot:handlebars-spring-boot-starter:0.2.15')
    compile('org.webjars.bower:jquery:3.2.1')
    compile('mysql:mysql-connector-java:5.1.44')
    compile('javax.mail:mail:1.4')
    compile('org.springframework.security:spring-security-core:4.2.3.RELEASE')
    compile('org.springframework.security:spring-security-web:4.2.3.RELEASE')
    compile("org.springframework.boot:spring-boot-starter-security")
    compile('io.springfox:springfox-swagger2:2.6.1')
    compile('io.springfox:springfox-swagger-ui:2.6.1')
    compile('org.antlr:ST4:4.0.8')
    compile ('org.apache.tiles:tiles-extras:3.0.7')
    compile('org.webjars.npm:handlebars:4.0.6')
    compile('org.springframework.boot:spring-boot-devtools:1.5.8.RELEASE')

    compile('org.springframework.security:spring-security-config:4.2.3.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-security:1.5.9.RELEASE')
    compile('org.springframework.security.oauth:spring-security-oauth2:2.2.1.RELEASE')

    compile('org.webjars.bower:jquery:3.2.1')
    compile('org.webjars:bootstrap:3.3.7-1')

    runtime('com.h2database:h2')
    runtime('mysql:mysql-connector-java')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = "real/" + jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}